// ------------------------------------------------------------------------
// Copyright 2022 The Dapr Authors
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//     http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ------------------------------------------------------------------------

using System.Threading.Tasks;
using Autogenerated = Dapr.Client.Autogen.Grpc.v1;
using Xunit;
using FluentAssertions;
using System;
using System.Collections.Generic;
using Google.Protobuf.Reflection;
using Google.Protobuf;

namespace Dapr.Client.Test
{

    [System.Obsolete]
    public class WorkflowApiTest
    {
        [Fact]
        public async Task TryStartWorkflowAsync()
        {
            await using var client = TestClient.CreateForDaprClient();
            string instanceID = "testInstance";
            string workflowComponent = "testComponent";
            string workflowType = "testFunction";
            object input = ByteString.CopyFrom(0x01);
            Dictionary<string, string> workflowOptions = new Dictionary<string, string>();

            workflowOptions.Add("task_queue", "testQueue");

            var request = await client.CaptureGrpcRequestAsync(async daprClient =>
            {
                return await daprClient.StartWorkflow(instanceID, workflowComponent, workflowType, input, workflowOptions);
            });

            // Get Request and validate
            var envelope = await request.GetRequestEnvelopeAsync<Autogenerated.StartWorkflowRequest>();
            envelope.InstanceId.Should().Be("testInstance", "Instance ID was not correct");
  
            // Get response and validate
            var workflowResponse = new Autogenerated.GetWorkflowResponse{
                InstanceId = instanceID
            };

            var domainResponse = await request.CompleteWithMessageAsync(workflowResponse);
            domainResponse.InstanceId.Should().Be("testInstance", "Instance ID was not correct");
        }

    }
}